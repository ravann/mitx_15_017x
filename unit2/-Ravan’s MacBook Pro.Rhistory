3+4
4 * 5
2^10
3+4
4 * 5
2^10
3+4
4 * 5
2^10
3+4
4 * 5
2^10
3+4
4 * 5
2^10
3+4
4 * 5
2^10
3 + 4  # this is comment on the code
4 * 5
2^10
sqrt(25)
sqrt(25)
sqrt(25)
sqrt(25)
sqrt(25)
sqrt(25)
source('~/.active-rstudio-document')
?sqrt
x <- 5
x^x
x <- 5
x^x
y <- x^x
k <- 6^2+2
k^2
k <- 6^2+2
myvar <- C(72, 20, -9, 12, 11)
myvar <- c(72, 20, -9, 12, 11)
myvar^2
myvar*2
sqrt(myvar)
sin(myvar)
t <- sqrt(myvar)
t^2
plot(myvar)
sum(myvar)
myvar[2]
myvar[0]
myvar[9]
myvar[6]
myvar[5]
myvar > 0
myvarb <- myvar > 0
myvar[myvar > 0]
myvar > 0
z <- c(2, 4, 6, 8, 10)
z
z^2
BikeData <- read.csv("~/Downloads/BikeData.csv")
View(BikeData)
View(BikeData)
View(BikeData)
bike <- BikeData
View(bike)
bike
mean(bike$distance)
view(bike)
table(bike$cyc_freq)
View(bike)
View(bike)
View(BikeData)
View(BikeData)
bike[1]
bike[1, 1]
bike[2, 1]
bike[1, 2]
bike[1, 3]
bike[, 3]
bike[, 5]
bike[, 6]
table(bike[, 6])
table(bike$gender)
bike$gender
bike$gender == "F"
females <- bike[bike$gender == "F", ]
View(females)
females <- bike[bike$gender == "F", 1:3]
females <- bike[bike$gender == "F", ]
females <- bike[bike$gender == "F", 2,3,4]
females <- bike[bike$gender == "F", (2:4, 6)]
females <- bike[bike$gender == "F", 2:6]
females <- bike[bike$gender == "F", ]
STBR <- read.csv("~/Desktop/OneDrive/Dev/R/Singapore-TotalBirthRate.csv")
View(STBR)
avg(STBR$Total.Births)
average(STBR$Total.Births)
mean(STBR$Total.Births)
View(STBR)
stbr <- read.csv("~/Desktop/OneDrive/Dev/R/Singapore-TotalBirthRate.csv")
View(stbr)
View(STBR)
View(STBR)
View(STBR)
stbr <- read.csv("~/Desktop/OneDrive/Dev/R/Singapore-TotalBirthRate.csv")
View(stbr)
bike <- read.csv("~/Desktop/OneDrive/Dev/R/BikeData.csv")
View(bike)
save.image("~/Desktop/OneDrive/Dev/R/r-workspace.RData")
?avg
?
??avg
?function
ave(STBR$Total.Births)
femalespeed <- bike$speed[bike$gender == "F"]
females <- bike[bike$gender == "F", ]
ave(femalespeed)
mean(STBR$Total.Births)
ave(femalespeed)
mean(femalespeed)
View(bike)
females <- bike[bike$gender == "F", ]
View(females)
table(bike$student)
student <- bike[bike$student==1, ]
View(student)
table(student$cyc_freq)
distance <- student$distance
mean(distance)
table(bike$cyc_freq)
males <- bike[bike$gender == "M", ]
table(males$cyc_freq)
daily <- bike[bike$cyc_freq == "daily", ]
daily <- bike[bike$cyc_freq == "Daily", ]
View(daily)
mean(daily$age)
females <- bike[bike$gender == "F", ]
mean(daily[daily$gender == "F", ]$age)
mean(daily[daily$gender == "M", ]$age)
count(males)
length(males)
length(males[males$age >= 30, ]$age)
daily_males <- daily[daily$gender == "M", ]
daily_males[daily_males$age >= 30, ]$age
length(daily_males[daily_males$age >= 30, ]$age)
mean(daily$age)
mean(daily[daily$gender == "F", ]$age)
mean(daily[daily$gender == "M", ]$age)
load (SDSFoundations)
library("SDSFoundations", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
save.image("~/Desktop/OneDrive/Dev/R/R-Scratchpad-L2.ws.RData")
load (AnimalData)
load (AnimalData)
animal <- AnimalData
View(animal)
head(animal)
table(animal$Sex)
plot(animal$sex)
plot(animal$Sex)
plot(animal$Sex, main="test", xlab="animal gender", ylab = "freq")
plot(animal$Sex, main="Animals in care by sex", xlab="animal gender", ylab = "freq")
table(animal$Age.Intake)
plot(animal$Age.Intake)
hist(animal$Age.Intake)
plot(animal$Age.Intake)
hist(animal$Age.Intake)
femaleage <- animal$Age.Intake[animal$Sex == "Female"]
maleage <- animal$Age.Intake[animal$Sex == "Male"]
hist(femaleage, main="histogram of female ages", xlab="age intake")
hist(maleage, main="histogram of female ages", xlab="age intake")
hist(maleage, main="histogram of female ages", xlab="age intake", breaks=5)
hist(maleage, main="histogram of female ages", xlab="age intake", breaks=15)
hist(maleage, main="histogram of female ages", xlab="age intake", breaks=5)
max(maleage)
maxanimal <- animal[animal$Age.Intake == max(maleage)]
maxanimal <- animal[animal$Age.Intake = max(maleage)]
maxanimal <- animal[animal$Age.Intake == 15]
maxanimal <- animal[animal$Age.Intake == 15, ]
maxanimal <- animal[animal$Age.Intake == max(maleage), ]
maxanimal <- animal[animal$Age.Intake == max(animal$Age.Intake), ]
View(maxanimal)
which(animal$Age.Intake = 15)
which(animal$Age.Intake == 15)
which(animal$Age.Intake == 17)
mean(animal$Age.Intake)
median(animal$Age.Intake)
mode(animal$Age.Intake)
sd(animal$Age.Intake)
fivenum(animal$Age.Intake)
animal[1:10, ]
adopted <- (animal[1:10, ])[animal$Outcome.Type = "Adoption"]
first10 <- animal[1:10, ]
adopted <- first10[first10$Outcome.Type = "Adoption"]
adopted <- first10[first10$Outcome.Type == "Adoption"]
View(adopted)
adopted <- first10[first10$Outcome.Type == "Adoption", ]
adopted <- (first10)[first10$Outcome.Type == "Adoption", ]
adopted <- (animal[1:10, ])[animal$Outcome.Type == "Adoption", ]
adopted <- (animal[1:10, ])[(animal[1:10, ])$Outcome.Type == "Adoption", ]
adopted <- animal[(animal[1:10, ])$Outcome.Type == "Adoption", ]
adopted <- first10[(first10$Outcome.Type == "Adoption", ]
adopted <- first10[first10$Outcome.Type == "Adoption", ]
animaldata<-AnimalData
males<-animaldata[animaldata$Sex == 'Male']
males<-animaldata[animaldata$Sex == "Male"]
males <- animaldata[animaldata$Sex == "Male", ]
adopted <- animaldata[animaldata$Outcome.Type=="Adoption",]
daystoadopt <- adopted$Days.Shelter
hist(daystoadopt)
mean(daystoadopt)
min(daystoadopt)
max(daystoadopt)
median(daystoadopt)
fivenum(daystoadopt)
mean(daystoadopt)
sg(daystoadopt)
sd(daystoadopt)
(max(daystoadopt) - mean(daystoadopt)) / sd(daystoadopt)
adults = animal[animal$Age.Intake >= 1]
adults = animal[animal$Age.Intake >= 1, ]
table(animal$Intake.Type)
table(animal$Animal.Type)
table(adults$Animal.Type)
adultdogs <- adults[adults$Animal.Type = "Dog"]
adultdogs <- adults[adults$Animal.Type = "Dog", ]
adultdogs <- adults[adults$Animal.Type == "Dog", ]
adultcats <- adults[adults$Animal.Type == "Cat", ]
hist(adultdogs$Weight)
hist(adultcats$Weight)
mean(adultcats$Weight)
sd(adultcats$Weight)
(13 - mean(adultcats$Weight)) / sd(adultcats$Weight)
pnorm((13 - mean(adultcats$Weight)) / sd(adultcats$Weight))
1 - pnorm((13 - mean(adultcats$Weight)) / sd(adultcats$Weight))
fivenum(adultdogs$Weight)
medium(adultdogs$Weight)
mean(adultdogs$Weight)
medium(adultdogs$Weight)
median(adultdogs$Weight)
1 - pnorm((13 - mean(adultdogs$Weight)) / sd(adultdogs$Weight))
mean(adultcats$Weight)
sd(adultcats$Weight)
median(adultcats$Weight)
max(adultdogs$Weight)
table(animal$Intake.Type[animal$Animal.Type == "Dog"])
dogs = animal[animal$Animal.Type == "Dog", ]
table(dogs$Intake.Type)
dogs[dogs$Intake.Type == "Owner Surrender"]
dogs[dogs$Intake.Type == "Owner Surrender", ]
dogs$Intake.Type[dogs$Intake.Type == "Owner Surrender"]
count(dogs$Intake.Type[dogs$Intake.Type == "Owner Surrender"])
length(dogs$Intake.Type[dogs$Intake.Type == "Owner Surrender"])
length(dogs$Intake.Type[dogs$Intake.Type == "Owner Surrender"]) / length(dogs)
length(dogs)
length(dogs$Intake.Type[dogs$Intake.Type == "Owner Surrender"]) / length(dogs$Intake.Type)
dogs[dogs$Intake.Type == "Owner Surrender", ]
dogs[dogs$Intake.Type == "Owner Surrender" && dogs$Outcome.Type == "Return to Owner", ]
dogs[dogs$Intake.Type == "Owner Surrender" and dogs$Outcome.Type == "Return to Owner", ]
dogs[dogs$Intake.Type == "Owner Surrender" & dogs$Outcome.Type == "Return to Owner", ]
rto <- dogs[dogs$Intake.Type == "Owner Surrender" & dogs$Outcome.Type == "Return to Owner", ]
View(rto)
1 - pnorm(1)
pnorm(1)
norm(1)
pnorm(1)
pnorm(-1)
pnorm(1)
1 - pnorm(1)
pnorm(1)
1 - pnorm(1) - pnorm(1)
1 - pnorm(1)
1 - pnorm(2)
pnorm(2)
save.image("~/Desktop/OneDrive/Dev/R/R-Scratchpad-L2.ws.RData")
save.image("~/Desktop/OneDrive/Dev/R/Data Analysis Course - UTX/R-Scratchpad-L3.RData")
library("SDSFoundations", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
br <- BullRiders
View(br)
BullRiders <- read.csv("~/Downloads/BullRiders.csv", header=FALSE)
View(BullRiders)
br <- BullRiders
plot(br$YearsPro, br$BuckOuts14)
plot(br$YearsPro, br$BuckOuts14, xlab="Years Pro", ylab="Buck Outs")
abline(lm(br$BuckOuts14 - br$YearsPro))
abline(lm(br$BuckOuts14 ~ br$YearsPro))
plot(br$Events14, br$BuckOuts14, xlab="Years Pro", ylab="Buck Outs")
abline(lm(br$BuckOuts14 ~ br$Events14))
br <- BullRiders
library("SDSFoundations", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
br <- BullRiders
plot(br$YearsPro, br$BuckOuts14, xlab="Years Pro", ylab="Buck Outs")
plot(br$Events14, br$BuckOuts14, xlab="Years Pro", ylab="Buck Outs")
cor(br$YearsPro, br$BuckOuts14)
cor(br$Events14, br$BuckOuts14)
cor(br$BuckOuts14, br$YearsPro)
br <- BullRiders
library("SDSFoundations", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("SDSFoundations", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
br <- BullRiders
plot(br$YearsPro, br$BuckOuts14, xlab="Years Pro", ylab="Buck Outs")
abline(lm(br$BuckOuts14 ~ br$YearsPro))
plot(br$Events14, br$BuckOuts14, xlab="Years Pro", ylab="Buck Outs")
abline(lm(br$BuckOuts14 ~ br$Events14))
cor(br$BuckOuts14, br$YearsPro)
cor(br$Events14, br$BuckOuts14)
library("SDSFoundations", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
br <- BullRiders
plot(br$YearsPro, br$BuckOuts14, xlab="Years Pro", ylab="Buck Outs")
abline(lm(br$BuckOuts14 ~ br$YearsPro))
plot(br$Events14, br$BuckOuts14, xlab="Years Pro", ylab="Buck Outs")
abline(lm(br$BuckOuts14 ~ br$Events14))
cor(br$BuckOuts14, br$YearsPro)
cor(br$Events14, br$BuckOuts14)
library("SDSFoundations", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
br <- BullRiders
sd(c(5,8,12))
which.min(c(4,1,6))
setwd("~/Desktop/OneDrive/Learn/Stats/TheAnalyticsEdge/unit2")
setwd("~/Desktop/OneDrive/Learn/Stats/TheAnalyticsEdge/unit2")
# Read in the data
NBA = read.csv("NBA_train.csv")
str(NBA)
# VIDEO 2
# How many wins to make the playoffs?
table(NBA$W, NBA$Playoffs)
# Compute Points Difference
NBA$PTSdiff = NBA$PTS - NBA$oppPTS
# Check for linear relationship
plot(NBA$PTSdiff, NBA$W)
# Linear regression model for wins
WinsReg = lm(W ~ PTSdiff, data=NBA)
summary(WinsReg)
cor(NBA$W, NBA$PTSdiff)
PointsReg = lm(PTS ~ X2PA + X3PA + FTA + AST + ORB + DRB + TOV + STL + BLK, data=NBA)
summary(PointsReg)
